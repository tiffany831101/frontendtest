{"version":3,"sources":["Tableitem.js","Table.js","App.js","serviceWorker.js","index.js"],"names":["Tableitem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","console","log","state","id","deleteId","sendID","bind","assertThisInitialized","deleteItem","e","setState","target","dataset","getItemId","_this2","react_default","a","createElement","tableItem","length","map","item","key","scope","name","phone","email","data-id","className","onClick","handleShow","Component","Tabletitle","Table","initialId","editId","editChange","modalShow","inputValue","inputError","inputColor","modifyColor","modifyError","handleChange","handleClick","handleClose","editClick","checkInvalid","changeColor","editChangeColor","modifyInvalid","Number","filter","preventDefault","value","objectSpread","defineProperty","prevState","inputName","test","indexOf","_this3","concat","toConsumableArray","modifyInput","_this4","type","onChange","onFocus","onBlur","placeholder","style","color","Table_Tabletitle","Tableitem_Tableitem","tabIndex","role","data-dismiss","aria-label","aria-hidden","App","Table_Table","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8a9583cb.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Tableitem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props);\r\n        this.state = {\r\n            id: 0,\r\n            deleteId: 0,\r\n\r\n        }\r\n\r\n        this.sendID = this.sendID.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    }\r\n\r\n    deleteItem(e) {\r\n        this.setState({\r\n            deleteId: e.target.dataset.id,\r\n        })\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        this.props.getItemId(this.state.id);\r\n        this.props.deleteItem(this.state.deleteId);\r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate() {\r\n        this.props.getItemId(this.state.id);\r\n        this.props.deleteItem(this.state.deleteId);\r\n    }\r\n\r\n    handleClick(e) {\r\n\r\n        this.setState({\r\n            id: e.target.dataset.id\r\n        })\r\n    }\r\n\r\n    sendID(e) {\r\n        this.setState({\r\n            id: e.target.dataset.id,\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.state);\r\n        return (\r\n            <tbody>\r\n                {this.props.tableItem.length !== 0 && this.props.tableItem.map((item, key) => (\r\n                    <tr key={key}>\r\n                        <th scope=\"row\">{item.id}</th>\r\n                        <td>{item.name}</td>\r\n                        <td>{item.phone}</td>\r\n                        <td>{item.email}</td>\r\n                        <td>\r\n                            <i data-id={item.id} className=\"fas fa-pen\"\r\n                                onClick={(e) => {\r\n                                    this.sendID(e)\r\n                                    this.props.handleShow()\r\n                                }}>\r\n                            </i>\r\n                            <i data-id={item.id} onClick={this.deleteItem} className=\"far fa-trash-alt\"></i>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Tableitem from \"./Tableitem\";\r\n\r\nconst Tabletitle = () => (\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\" className=\"thead__id\">ID</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Phone</th>\r\n            <th scope=\"col\">Email</th>\r\n            <th scope=\"col\" className=\"thead__action\">Action</th>\r\n\r\n        </tr>\r\n    </thead>\r\n)\r\n\r\nexport default class Table extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            deleteId: 0,\r\n            initialId: 0,\r\n            //由子層傳上來要改的id\r\n            editId: 0,\r\n            // 要修改的tableitem\r\n            editChange: {\r\n                name: \"\",\r\n                phone: \"\",\r\n                email: \"\",\r\n            },\r\n            // 是否要顯示modal輸入框，當要修改時才會出現modal\r\n            modalShow: false,\r\n            // 上面輸入攔的部分\r\n            inputValue: {\r\n                name: \"\",\r\n                phone: \"\",\r\n                email: \"\",\r\n            },\r\n            inputError: {\r\n                phone: false,\r\n                email: true,\r\n                name: false,\r\n            },\r\n            inputColor: {\r\n                phone: false,\r\n                email: false,\r\n                name: false,\r\n            },\r\n            modifyColor: {\r\n                phone: false,\r\n                email: false,\r\n                name: false,\r\n            },\r\n            modifyError: {\r\n                phone: false,\r\n                email: true,\r\n                name: false,\r\n            },\r\n            // 表格裡的內容\r\n            tableItem: [],\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.getItemId = this.getItemId.bind(this);\r\n        this.handleShow = this.handleShow.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.editChange = this.editChange.bind(this);\r\n        this.editClick = this.editClick.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.checkInvalid = this.checkInvalid.bind(this);\r\n        this.changeColor = this.changeColor.bind(this);\r\n        this.editChangeColor = this.editChangeColor.bind(this);\r\n        this.modifyInvalid = this.modifyInvalid.bind(this);\r\n\r\n    }\r\n\r\n    deleteItem(deleteId) {\r\n        let id = Number(deleteId);\r\n        // console.log(deleteId);\r\n        // console.log(this.state.deleteId);\r\n        // console.log()\r\n        if (deleteId == this.state.deleteId) return;\r\n        this.setState({\r\n            deleteId: deleteId,\r\n            tableItem: this.state.tableItem.filter((item, key) => {\r\n                // console.log(item.id == deleteId)\r\n                return Number(item.id) !== id\r\n            }),\r\n        })\r\n    }\r\n\r\n    editChange(e) {\r\n        // console.log(e);\r\n        e.preventDefault();\r\n        // console.log(e.target.value);\r\n        let value = e.target.value;\r\n        // let inputType = e.target.name;\r\n        this.setState({\r\n            editChange: {\r\n                ...this.state.editChange,\r\n                [e.target.name]: value,\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    editClick(e) {\r\n        if (this.state.modifyError.email || this.state.modifyError.phone || this.state.modifyError.name) return\r\n        // console.log(e.target);\r\n        // console.log(this.state.editId);\r\n        this.setState(prevState => ({\r\n            modalShow: false,\r\n            tableItem: this.state.tableItem.map((item, key) => {\r\n                if (item.id == this.state.editId) {\r\n                    return ({ ...this.state.editChange, id: this.state.editId })\r\n                } else {\r\n                    return item\r\n                }\r\n            }),\r\n            editChange: {\r\n                name: \"\",\r\n                phone: \"\",\r\n                email: \"\",\r\n                id: 0,\r\n            },\r\n            modifyError: {\r\n                email: true,\r\n                phone: false,\r\n                name: false,\r\n            }\r\n        }))\r\n\r\n    }\r\n\r\n    handleChange(e) {\r\n        e.preventDefault();\r\n        // console.log(e.target.value);\r\n        let value = e.target.value;\r\n        console.log(e.target.name);\r\n        //check for regular expression\r\n        // 2. phone\r\n        // 3. email\r\n        // if (e.target.name == \"phone\") {\r\n        //     if (!(/^0\\d{1,3}-\\d{5,8}$/.test(e.target.value))) {\r\n        //         alert(\"號碼有誤，請重填\");\r\n        //         return false;\r\n        //     }\r\n        // }\r\n        // let inputType = e.target.name;\r\n        this.setState({\r\n            inputValue: {\r\n                ...this.state.inputValue,\r\n                [e.target.name]: value,\r\n\r\n            }\r\n        })\r\n    }\r\n    // 這邊可以取得到要修改哪一筆的資料\r\n    getItemId(id) {\r\n        this.setState(prevState => {\r\n            // console.log(prevState.editId)\r\n            // console.log(id)\r\n            if (id == prevState.editId) {\r\n                // console.log(\"已經更改過了\")\r\n                return\r\n            } else {\r\n                return (\r\n                    {\r\n                        modalShow: true,\r\n                        editId: id,\r\n                    }\r\n                )\r\n            }\r\n\r\n\r\n\r\n        })\r\n    }\r\n\r\n\r\n\r\n    handleShow(e) {\r\n        // console.log(e);\r\n        this.setState({\r\n            modalShow: true,\r\n        })\r\n    }\r\n\r\n    //change borderColor when focus on input\r\n    changeColor(e) {\r\n        console.log(\"changing...\");\r\n        let inputName = e.target.name;\r\n        this.setState(prevState => {\r\n            return ({\r\n                inputColor: {\r\n                    ...prevState.inputColor,\r\n                    [inputName]: true,\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    // onblur\r\n    // check if valid before submit\r\n    checkInvalid(e) {\r\n        console.log(\"checking...\")\r\n        // check phone\r\n        // console.log(e.target.value);\r\n        if (e.target.name === \"phone\") {\r\n            if (!(/^0\\d{1,3}-\\d{5,8}$/.test(e.target.value))) {\r\n                if (e.target.value == \"\") {\r\n                    console.log(\"here is empty...\")\r\n                    this.setState(prevState => {\r\n                        return ({\r\n                            inputError: {\r\n                                ...prevState.inputError,\r\n                                phone: false,\r\n                            },\r\n                            inputColor: {\r\n                                ...prevState.inputColor,\r\n                                phone: false,\r\n                            }\r\n                        })\r\n                    })\r\n                } else {\r\n                    this.setState(prevState => {\r\n                        return ({\r\n                            inputError: {\r\n                                ...prevState.inputError,\r\n                                phone: true,\r\n                            },\r\n                            inputColor: {\r\n                                ...prevState.inputColor,\r\n                                phone: false,\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            } else {\r\n                this.setState(prevState => {\r\n                    return ({\r\n                        inputError: {\r\n                            ...prevState.inputError,\r\n                            phone: false,\r\n                        },\r\n                        inputColor: {\r\n                            ...prevState.inputColor,\r\n                            phone: false,\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        //check email\r\n        if (e.target.name === \"email\") {\r\n            if (!(/^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/.test(e.target.value))) {\r\n                this.setState(prevState => {\r\n                    return ({\r\n                        inputError: {\r\n                            ...prevState.inputError,\r\n                            email: true,\r\n                        },\r\n                        inputColor: {\r\n                            ...prevState.inputColor,\r\n                            email: false,\r\n                        }\r\n                    })\r\n                })\r\n            } else {\r\n                this.setState(prevState => {\r\n                    return ({\r\n                        inputError: {\r\n                            ...prevState.inputError,\r\n                            email: false,\r\n                        },\r\n                        inputColor: {\r\n                            ...prevState.inputColor,\r\n                            email: false,\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n\r\n\r\n        }\r\n        //check if duplicate name\r\n        if (e.target.name === \"name\") {\r\n            if (this.state.tableItem.map(item => item.name).indexOf(e.target.value) !== (-1)) {\r\n                this.setState(prevState => {\r\n                    return ({\r\n                        inputError: {\r\n                            ...prevState.inputError,\r\n                            name: true,\r\n                        },\r\n                        inputColor: {\r\n                            ...prevState.inputColor,\r\n                            name: false,\r\n                        }\r\n                    })\r\n                })\r\n            } else {\r\n                this.setState(prevState => {\r\n                    return ({\r\n                        inputError: {\r\n                            ...prevState.inputError,\r\n                            name: false,\r\n                        },\r\n                        inputColor: {\r\n                            ...prevState.inputColor,\r\n                            name: false,\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n\r\n        }\r\n    }\r\n    // click to submit\r\n    handleClick(e) {\r\n        if (this.state.inputError.email || this.state.inputError.phone || this.state.inputError.name) return\r\n        this.setState(prevState => ({\r\n            tableItem: [\r\n                ...prevState.tableItem,\r\n                {\r\n                    ...this.state.inputValue,\r\n                    id: (this.state.initialId + 1),\r\n                }\r\n                // this.state.inputValue,\r\n                // this.state.initialId,\r\n            ],\r\n            initialId: (prevState.initialId + 1),\r\n        }))\r\n\r\n        this.setState({\r\n            inputValue: {\r\n                name: \"\",\r\n                email: \"\",\r\n                phone: \"\",\r\n            },\r\n            inputError: {\r\n                name: false,\r\n                phone: false,\r\n                email: true,\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    handleClose(e) {\r\n        this.setState({\r\n            modalShow: false,\r\n        })\r\n    }\r\n\r\n    editChangeColor(e) {\r\n        console.log(\"modify changing...\");\r\n        let modifyInput = e.target.name;\r\n        this.setState(prevState => {\r\n            return ({\r\n                modifyColor: {\r\n                    ...prevState.modifyColor,\r\n                    [modifyInput]: true,\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    modifyInvalid(e) {\r\n        console.log(\"checking...\")\r\n        // check phone\r\n        // console.log(e.target.value);\r\n        if (e.target.name === \"phone\") {\r\n            if (!(/^0\\d{1,3}-\\d{5,8}$/.test(e.target.value))) {\r\n                if (e.target.value == \"\") {\r\n                    console.log(\"here is empty...\")\r\n                    this.setState(prevState => {\r\n                        return ({\r\n                            modifyError: {\r\n                                ...prevState.modifyError,\r\n                                phone: false,\r\n                            },\r\n                            modifyColor: {\r\n                                ...prevState.modifyColor,\r\n                                phone: false,\r\n                            }\r\n                        })\r\n                    })\r\n                } else {\r\n                    this.setState(prevState => {\r\n                        return ({\r\n                            modifyError: {\r\n                                ...prevState.modifyError,\r\n                                phone: true,\r\n                            },\r\n                            modifyColor: {\r\n                                ...prevState.modifyColor,\r\n                                phone: false,\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            } else {\r\n                this.setState(prevState => {\r\n                    return ({\r\n                        modifyError: {\r\n                            ...prevState.modifyError,\r\n                            phone: false,\r\n                        },\r\n                        modifyColor: {\r\n                            ...prevState.modifyColor,\r\n                            phone: false,\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        //check email\r\n        if (e.target.name === \"email\") {\r\n            if (!(/^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/.test(e.target.value))) {\r\n                this.setState(prevState => {\r\n                    return ({\r\n                        modifyError: {\r\n                            ...prevState.modifyError,\r\n                            email: true,\r\n                        },\r\n                        modifyColor: {\r\n                            ...prevState.modifyColor,\r\n                            email: false,\r\n                        }\r\n                    })\r\n                })\r\n            } else {\r\n                this.setState(prevState => {\r\n                    return ({\r\n                        modifyError: {\r\n                            ...prevState.modifyError,\r\n                            email: false,\r\n                        },\r\n                        modifyColor: {\r\n                            ...prevState.modifyColor,\r\n                            email: false,\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n\r\n\r\n        }\r\n        //check if duplicate name\r\n        if (e.target.name === \"name\") {\r\n            console.log(this.state.editId);\r\n            console.log(this.state.tableItem\r\n                .filter(item => (Number(item.id) !== Number(this.state.editId)))\r\n                .map(item => item.name)\r\n                .indexOf(e.target.value));\r\n            // console.log(this.state.tableItem.filter(item => (Number(item.id) !== Number(this.state.editId)))).map(item => item.name))\r\n            if (this.state.tableItem.filter(item => (Number(item.id) !== Number(this.state.editId))).map(item => item.name).indexOf(e.target.value) !== (-1)) {\r\n                this.setState(prevState => {\r\n                    return ({\r\n                        modifyError: {\r\n                            ...prevState.modifyError,\r\n                            name: true,\r\n                        },\r\n                        modifyColor: {\r\n                            ...prevState.modifyColor,\r\n                            name: false,\r\n                        }\r\n                    })\r\n                })\r\n            } else {\r\n                this.setState(prevState => {\r\n                    return ({\r\n                        modifyError: {\r\n                            ...prevState.modifyError,\r\n                            name: false,\r\n                        },\r\n                        modifyColor: {\r\n                            ...prevState.modifyColor,\r\n                            name: false,\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        const style = {\r\n            borderColor: \"#1abc9c\",\r\n        }\r\n        console.log(this.state.modifyColor);\r\n        console.log(this.state.modifyError);\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"col-lg-5 col-md-6 col-sm-8 col-12  mt-5\">\r\n\r\n                    <div className=\"input__box\">\r\n                        <div className={(this.state.inputColor.name && \"input__box__area--active\") + \" input__box__area\"}>\r\n                            <input name=\"name\" type=\"text\" className=\"\" onChange={this.handleChange} onFocus={this.changeColor} value={this.state.inputValue.name} onBlur={this.checkInvalid} placeholder='Enter Your Name' />\r\n                            <i className=\"fas fa-user\" style={this.state.inputColor.name ? { color: \"#1abc9c\" } : {}}></i>\r\n                        </div>\r\n                        <p className={this.state.inputError.name ? \"error\" : \"valid\"}>Name already exists</p>\r\n                        <div className={(this.state.inputColor.phone && \"input__box__area--active\") + \" input__box__area\"}>\r\n                            <input name=\"phone\" type=\"text\" className=\"\" onChange={this.handleChange} onFocus={this.changeColor} value={this.state.inputValue.phone} onBlur={this.checkInvalid} placeholder='Enter Your Phone ex:02-111111' />\r\n                            <i className=\"fas fa-phone\" style={this.state.inputColor.phone ? { color: \"#1abc9c\" } : {}}></i>\r\n\r\n                        </div>\r\n                        <p className={this.state.inputError.phone ? \"error\" : \"valid\"}>Enter a valid Phone Number</p>\r\n                        <div className={(this.state.inputColor.email && \"input__box__area--active\") + \" input__box__area\"}>\r\n                            <input name=\"email\" type=\"email\" className=\"\" onChange={this.handleChange} onFocus={this.changeColor} value={this.state.inputValue.email} onBlur={this.checkInvalid} placeholder='Enter Your Email*' />\r\n                            <i className=\"fas fa-envelope-open\" style={this.state.inputColor.email ? { color: \"#1abc9c\" } : {}}></i>\r\n                        </div>\r\n                        <p className={this.state.inputError.email ? \"error\" : \"valid\"}>必填*</p>\r\n                        <button onClick={this.handleClick} className=\"input__box__btn\">Add</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-12 col-md-10 col-12 mx-auto mt-4\">\r\n                    {/* table */}\r\n\r\n                    <div className=\"table__wrapper\">\r\n                        <table className=\"table\">\r\n                            <Tabletitle />\r\n                            <Tableitem tableItem={this.state.tableItem} getItemId={this.getItemId} deleteItem={this.deleteItem} handleShow={this.handleShow} />\r\n                        </table>\r\n                    </div>\r\n                    {/*modal */}\r\n                    <div className={(this.state.modalShow ? \"d-block \" : \"d-none \") + \"modal\"} tabIndex=\"-1\" role=\"dialog\">\r\n                        <div className=\"modal-dialog\" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\">Modify</h5>\r\n                                    {/* 消失 */}\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" >\r\n                                        <span aria-hidden=\"true\" onClick={this.handleClose}>&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body py-5\">\r\n\r\n                                    <input name=\"name\" type=\"text\" className={(this.state.modifyColor.name && \"modify__input--active\")} onChange={this.editChange} value={this.state.editChange.name} onFocus={this.editChangeColor}\r\n                                        onBlur={this.modifyInvalid} placeholder=\"name\" />\r\n                                    <p className={(this.state.modifyError.name ? \"error\" : \"valid\") + \" mb-1\"}>Name already exists</p>\r\n\r\n                                    <input name=\"phone\" type=\"text\" className={(this.state.modifyColor.phone && \"modify__input--active\")} onChange={this.editChange} value={this.state.editChange.phone} onFocus={this.editChangeColor} onBlur={this.modifyInvalid} placeholder=\"phone\" />\r\n                                    <p className={(this.state.modifyError.phone ? \"error\" : \"valid\") + \" mb-1\"}>Invalid Phone Number</p>\r\n                                    <input name=\"email\" type=\"email\" className={(this.state.modifyColor.email && \"modify__input--active\")} onChange={this.editChange} value={this.state.editChange.email} onFocus={this.editChangeColor} onBlur={this.modifyInvalid} placeholder=\"email\" />\r\n                                    <p className={(this.state.modifyError.email ? \"error\" : \"valid\") + \" mb-1\"}>必填*</p>\r\n\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={this.handleClose}>Close</button>\r\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.editClick}>Save changes</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport Table from \"./Table\";\nimport \"./App.css\"\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App container-fluid\">\n        <div className=\"\">\n          <Table />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}